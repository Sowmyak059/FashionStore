@model IEnumerable<CartItem>

<h2 class="text-center my-4">Your Cart</h2>

<div class="container">
    <div class="row">
        @foreach (var item in Model)
        {
            <div class="col-12 cart-item d-flex align-items-center p-3 shadow-sm mb-3 rounded">
                <!-- Product Image -->
                <div class="cart-item-img">
                    <img src="@item.Product.ImageUrl" alt="@item.Product.Name" class="img-fluid">
                </div>

                <!-- Product Details -->
                <div class="cart-item-details flex-grow-1 px-3">
                    <h5 class="mb-1">@item.Product.Name</h5>
                    <p class="text-muted small">@item.Product.Description</p>
                </div>

                <!-- Quantity Controls -->
                <div class="cart-item-quantity d-flex align-items-center">
                    <button class="btn btn-outline-secondary btn-sm px-3 me-2" onclick="updateQuantity(@item.CartItemID, -1)" id="decrement-@item.CartItemID" @(item.Quantity == 1 ? "disabled" : "")>-</button>
                    <span id="quantity-@item.CartItemID" class="fw-bold mx-2">@item.Quantity</span>
                    <button class="btn btn-outline-secondary btn-sm px-3" onclick="updateQuantity(@item.CartItemID, 1)">+</button>
                </div>

                <!-- Price Info -->
                <div class="cart-item-price text-end ms-3">
                    <p class="fw-bold text-primary" id="price-@item.CartItemID" data-unit-price="@item.Product.Price">@(@item.Product.Price * item.Quantity) kr</p>
                </div>

                <!-- Remove Button -->
                <div class="cart-item-remove ms-3">
                    <button class="btn btn-danger btn-sm" onclick="deleteFromCart(@item.CartItemID)">Remove</button>
                </div>
            </div>
        }
    </div>

    <!-- Total Price -->
    <div class="text-end mt-4">
        <h4>Total: <span id="totalPrice" class="fw-bold text-success">0</span> kr</h4>
    </div>

    <!-- Checkout Button -->
    <div class="text-center mt-4">
        <a href="/Cart/Checkout" class="btn btn-success btn-lg px-5" id="checkout-btn">Proceed to Checkout</a>
    </div>
</div>

@section Scripts {
    <script src="~/js/scripts.js"></script>
    <script>
        function updateQuantity(cartItemId, change) {
            let quantityElem = document.getElementById(`quantity-${cartItemId}`);
            let priceElem = document.getElementById(`price-${cartItemId}`);
            let decrementBtn = document.getElementById(`decrement-${cartItemId}`);

            let quantity = parseInt(quantityElem.innerText) + change;
            if (quantity < 1) return;

            quantityElem.innerText = quantity;
            decrementBtn.disabled = quantity === 1;

            let unitPrice = parseFloat(priceElem.getAttribute('data-unit-price'));
            let newPrice = unitPrice * quantity;
            priceElem.innerText = newPrice.toFixed(2) + " kr";

            fetch('/Cart/UpdateQuantity', {
                method: 'POST',
                headers: {'Content-Type': 'application/json'},
                body: JSON.stringify({ CartItemId: cartItemId, Quantity: quantity })
            }).then(response => {
                if (!response.ok) console.error('Failed to update quantity');
            });

            updateTotalPrice();
        }

        function deleteFromCart(cartItemId) {
            fetch(`/Cart/DeleteFromCart/${cartItemId}`, {
                method: 'DELETE',
                headers: {'Content-Type': 'application/json'}
            }).then(response => {
                if (response.ok) {
                    document.getElementById(`quantity-${cartItemId}`).closest('.cart-item').remove();
                    updateTotalPrice();
                } else {
                    console.error('Failed to delete item');
                }
            });
        }

        function updateTotalPrice() {
            let totalPriceElem = document.getElementById("totalPrice");
            let checkoutBtn = document.getElementById("checkout-btn");
            let totalPrice = 0;

            document.querySelectorAll("[id^='price-']").forEach(priceElem => {
                let unitPrice = parseFloat(priceElem.getAttribute('data-unit-price'));
                let quantityElem = document.getElementById(`quantity-${priceElem.id.split('-')[1]}`);
                let quantity = parseInt(quantityElem.innerText);
                totalPrice += unitPrice * quantity;
            });

            totalPriceElem.innerText = totalPrice.toFixed(2) + " kr";
            checkoutBtn.disabled = totalPrice === 0;
        }

        updateTotalPrice();
    </script>
}

<style>
    .cart-item {
        background: #fff;
        border-radius: 10px;
        transition: transform 0.2s ease-in-out;
    }

        .cart-item:hover {
            transform: scale(1.02);
            box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.15);
        }

    .cart-item-img img {
        width: 80px;
        height: 80px;
        object-fit: cover;
        border-radius: 10px;
    }

    .cart-item-quantity button {
        font-size: 18px;
        font-weight: bold;
    }

    .cart-item-price p {
        font-size: 18px;
        font-weight: bold;
    }
</style>
